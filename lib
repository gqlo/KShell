#! /bin/bash

# global constant
OC_VERSION=$(oc version -o yaml | grep openshiftVersion | grep -o '[0-9]*[.][0-9]*' | head -1)

#-- Local Storage Operator -----------------------------------------------------
install_lso(){
    oc create -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: openshift-local-storage
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: local-operator-group
  namespace: openshift-local-storage
spec:
  targetNamespaces:
    - openshift-local-storage
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: local-storage-operator
  namespace: openshift-local-storage
spec:
  channel: stable
  installPlanApproval: Automatic
  name: local-storage-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
EOF

# local volume filesystem mode
create_local_volume_fs() {
    oc create -f - <<EOF
apiVersion: "local.storage.openshift.io/v1"
kind: "LocalVolume"
metadata:
  name: "local-disks"
  namespace: "openshift-local-storage"
spec:
  nodeSelector:
    nodeSelectorTerms:
    - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - worker011-1029p
          - worker012-1029p
          - worker013-1029p
  storageClassDevices:
    - storageClassName: "local-worker011-013"
      volumeMode: Filesystem
      fsType: xfs
      devicePaths:
        - /dev/nvme0n1
EOF

# local volume block mode
create_local_volume_blk() {
    oc create -f - <<EOF
apiVersion: "local.storage.openshift.io/v1"
kind: "LocalVolume"
metadata:
  name: "local-disks-odf-block"
  namespace: "openshift-local-storage"
spec:
  nodeSelector:
    nodeSelectorTerms:
    - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - worker005-1029p
          - worker006-1029p
          - worker007-1029p
  storageClassDevices:
    - storageClassName: "odf-worker005-007"
      volumeMode: Block
      devicePaths:
        - /dev/nvme0n1
EOF
#-- OpenShift Data Foundation --------------------------------------------------

#-- OpenShift Virtualization ---------------------------------------------------

# install cnv operator
install_cnv() {
    oc create -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: openshift-cnv
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: kubevirt-hyperconverged-group
  namespace: openshift-cnv
spec:
  targetNamespaces:
    - openshift-cnv
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: hco-operatorhub
  namespace: openshift-cnv
spec:
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  name: kubevirt-hyperconverged
  startingCSV: kubevirt-hyperconverged-operator.v$OC_VERSION.0
  channel: "stable"
EOF
}

# create hyperconverged object
create_hco() {
    oc create -f - <<EOF
apiVersion: hco.kubevirt.io/v1beta1
kind: HyperConverged
metadata:
  name: kubevirt-hyperconverged
  namespace: openshift-cnv
spec:
EOF
}

#-- MetalLB --------------------------------------------------------------------

# install metal load balancer
install_metallb() {
    oc create -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: metallb-system
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: metallb-operator
  namespace: metallb-system
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: metallb-operator-sub
  namespace: metallb-system
spec:
  channel: stable
  name: metallb-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
EOF
}

# configure metal load balancer using L2 advertisement
create_metallb_instance() {
    oc create -f - <<EOF
apiVersion: metallb.io/v1beta1
kind: MetalLB
metadata:
  name: metallb
  namespace: metallb-system
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: metallb
  namespace: metallb-system
spec:
  addresses:
  - 192.168.216.32-192.168.216.122
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2advertisement
  namespace: metallb-system
spec:
  ipAddressPools:
   - metallb
EOF
}

#-- Multicluster Engine --------------------------------------------------------

# install multicluster engine version 2.2
install_multicluster_engine() {
    oc create -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: multiclusterengine
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: multiclusterengine
spec:
  targetNamespaces:
  - multiclusterengine
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: multicluster-engine
spec:
  sourceNamespace: openshift-marketplace
  source: redhat-operators
  channel: stable-2.2
  installPlanApproval: Automatic
  name: multicluster-engine
EOF
}

# create multicluster engine instance
create_mce_instance() {
    oc create -f - <<EOF
apiVersion: multicluster.openshift.io/v1
kind: MultiClusterEngine
metadata:
  name: multiclusterengine-sample
  spec: {}
EOF
}

# HyperShift with KubeVirt provider is still dev preview, thus not enabled by default
enable_hypershift_preview() {
    oc patch mce multiclusterengine-sample --type=merge -p '{"spec":{"overrides":{"components":[{"name":"hypershift-preview","enabled": true}]}}}'
}

#-- Cluster Manager ------------------------------------------------------------

# create managed cluster
create_managed_cluster() {
    oc create -f - <<EOF
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  labels:
    local-cluster: "true"
  name: local-cluster
spec:
  hubAcceptsClient: true
  leaseDurationSeconds: 60
EOF
}

#-- HyperShift -----------------------------------------------------------------

# enable hypershift operator
install_hypershift_operator() {
    oc create -f - <<EOF
apiVersion: addon.open-cluster-management.io/v1alpha1
kind: ManagedClusterAddOn
metadata:
  name: hypershift-addon
  namespace: local-cluster
spec:
  installNamespace: open-cluster-management-agent-addon
EOF
}
